#!/usr/bin/env python2

# Copyright (c) 2012 Jeppe Ledet-Pedersen <jlp@satlab.org>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

import sys
import os.path
import bluebox

def usage():
	print("usage: {0} command [arguments]".format(os.path.basename(sys.argv[0])))
	sys.exit(0)

def main():
	verbose = False

	if len(sys.argv) < 2:
		usage()

	cmd = sys.argv[1]

	bb = bluebox.Bluebox()

	if verbose:
		print("Found {0} {1} with serial {2} on bus {3}:{4}".format(
			bb.manufacturer, bb.product, bb.serial,
			bb.dev.bus, bb.dev.address))
	
	if cmd == "bootloader":
		bb.bootloader()
	elif cmd == "version":
		ver = bb.version()
		print(hex(ver))
	elif cmd == "rssi":
		rssi = bb.rssi()
		print("{0} dBm".format(rssi))
	elif cmd == "data":
		while True:
			ret = bb.data_read()
			print("Recv ({0}) '{1}'".format(len(ret), ''.join(["{0:02x}".format(x) for x in ret])))
	elif cmd == "testmode":
		bb.testmode(bb.TESTMODE_PATTERN_1010)
		bb.tx_mode()
	elif cmd == "tx":
		bb.tx_mode()
	elif cmd == "rx":
		bb.rx_mode()
	elif cmd == "frequency":
		bb.frequency(int(sys.argv[2]))
	else:
		usage()

	sys.exit(0)

if __name__ == "__main__":
	main()
